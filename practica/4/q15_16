//Complete el siguiente código en C para que la variable acum presente el menor error posible para la precisión Q15.16:
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <limits.h>
int32_t fp2fx(float X, int32_t n){
int32_t temp;
[temp = (int32_t) round( X * ( 1 < < n ) );]
return temp;
} float fx2fp(int32_t X, int32_t n){
float temp;
[temp = (float) (X) / ( 1 < < n );]
return temp;
} int main(int argc, char** argv)
{
float x[5]={1.1, 2.2, 3.3, 4.4, 5.5};
float y[5]={6.6, 7.7, 8.8, 9.9, 10.10};
int32_t N = 5;
int64_t aux = 0;
[int64_t acum = 0;]
// MAC OPERATION
acum = 0;
for(int i=0;i<N;i++)
{
[aux = (int64_t) fp2fx( x[i], 16 ) * (int64_t) fp2fx( y[i], 16) ;]
acum = (acum + aux) ;
} printf("acum = %ld \n", acum );
printf("acum = %f \n", fx2fp((int32_t)(acum >> 32), 16));
}
